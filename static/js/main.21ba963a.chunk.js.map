{"version":3,"sources":["components/projects-section/projectData.js","components/photo/profilePhoto.png","components/nav/nav.component.jsx","components/photo/photo.component.jsx","components/blurb/blurb.component.jsx","components/about-section/about-section.component.jsx","components/skills/skills.component.jsx","components/project/project.component.jsx","components/projects-section/projects-section.component.jsx","components/contact-form/contact-form.component.jsx","components/socials/socials.component.jsx","components/contact-section/contact-section.component.jsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","id","tags","title","description","imageUrl","githubUrl","liveUrl","Nav","currentSection","changeSection","className","onClick","e","fetch","responseType","headers","Accept","then","response","console","log","window","open","url","catch","err","Photo","src","image","alt","Blurb","About","Skills","selectedSkills","handleSelectSkill","handleSelectAll","handleClearProjects","skills","map","skill","includes","length","Project","project","tag","href","target","rel","ProjectsSection","setState","selectAll","state","updatedSkills","filter","i","projects","projectData","this","display","forEach","Component","ContactForm","handleChange","name","value","handleSubmit","preventDefault","messageData","message","email","subject","method","body","JSON","stringify","res","json","onSubmit","type","onChange","cols","rows","Socials","Contact","App","section","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error"],"mappings":"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","file":"static/js/main.21ba963a.chunk.js","sourcesContent":["const projectData = [\r\n    {\r\n        id: 1,\r\n        tags: [\"Javascript\", \"React\", \"Node\", \"SQL\"],\r\n        title: \"Foodsur\",\r\n        description: \"A progressive web application that allows users to scan UPC codes and see if these items conflict with given dietry restrictions. Users can also favourite items and see items favourited by users with similar dietary restrictions.\",\r\n        imageUrl: \"A Url\",\r\n        githubUrl: \"https://github.com/AtaAnsari/Foodsur-Client\",\r\n        liveUrl: \"https://foodsur.netlify.app/\",\r\n    }, {\r\n        id: 2,\r\n        \"tags\": [\"Javascript\", \"React\", \"Node\", \"MongoDB\"],\r\n        \"title\": \"Toronto City Guide\",\r\n        \"imageUrl\": \"A Url\",\r\n        \"description\": \"A react application using the google maps api that allows users to look up various accomidations near them throughout Toronto. Users can also make a daily itinerary and can add contacts to take advantage of live chat functionality.\",\r\n        \"githubUrl\": \"https://github.com/victorcwyu/Toronto-City-Guide-Client\",\r\n        \"liveUrl\": \"https://torontoguide.netlify.app/\",\r\n    }, {\r\n        id: 3,\r\n        \"tags\": [\"Javascript\", \"Node\", \"MongoDB\"],\r\n        \"title\": \"Tweet Catcher\",\r\n        \"imageUrl\": \"A Url\",\r\n        \"description\": \"A react application that allows users to search for tweets by hashtag using the twitter api. Users can save tweets to a hashtag to view later.\",\r\n        \"githubUrl\": \"https://github.com/kguertin/tweet-catcher\",\r\n        \"liveUrl\": \"\"\r\n    }, \r\n    {\r\n        id: 4,\r\n        \"tags\": [\"Ruby\", \"Javascript\", \"SQL\"],\r\n        \"title\": \"Jungle\",\r\n        \"imageUrl\": \"A Url\",\r\n        \"description\": \"A boot camp project using Ruby on Rails where I worked on fixing issues and expanding functionality of an existing code base.\",\r\n        \"githubUrl\": \"https://github.com/kguertin/jungle\",\r\n        \"liveUrl\": \"\",\r\n    },\r\n    {\r\n        id: 5,\r\n        \"tags\": [\"Javascript\", \"Node\", \"SQL\"],\r\n        \"title\": \"Full Cycle\",\r\n        \"imageUrl\": \"A Url\",\r\n        \"description\": \"A ecommerce mock up that allows users to filter by bike type and add favouites for later viewing.\",\r\n        \"githubUrl\": \"https://github.com/noahnovickf/midterm\",\r\n        \"liveUrl\": \"\"\r\n    }\r\n]\r\n\r\nmodule.exports = projectData;","module.exports = __webpack_public_path__ + \"static/media/profilePhoto.2ba83bb3.png\";","import React from 'react';\r\n\r\nimport './nav.styles.css';\r\n\r\nexport const Nav = ({currentSection, changeSection}) => {\r\n    const getResume = () => {\r\n        fetch('http://localhost:5000/resume', {\r\n            responseType: 'blob',\r\n            headers: {\r\n                Accept: 'application/pdf',\r\n            }\r\n        })\r\n        .then(response => {\r\n            console.log(response)\r\n            window.open(response.url)\r\n        })\r\n        .catch(err => console.log(err));\r\n    }\r\n\r\n    return (\r\n        <ul className=\"nav\">\r\n            <li className={currentSection === 'about' ? \"nav-item nav-active\": \"nav-item\"} onClick={e => changeSection('about')}>About</li>\r\n            <li className={currentSection === 'projects' ? \"nav-item nav-active\": \"nav-item\"} onClick={e => changeSection('projects')}>Projects</li>\r\n            <li className={currentSection === 'contact' ? \"nav-item nav-active\": \"nav-item\"} onClick={e => changeSection('contact')}>Contact</li>\r\n            <li className=\"nav-item\" onClick={() => getResume()}>Download Resume</li>\r\n        </ul>\r\n    )\r\n}","import React from 'react';\r\n\r\nimport image from './profilePhoto.png'\r\n\r\nimport './photo.styles.css';\r\n\r\nexport const Photo = () => {\r\n    return (\r\n        <div className=\"photo-container\">\r\n            <img className='profile-photo' src={image} alt=\"Kevin Guertin\" />\r\n        </div>\r\n    )\r\n}","import React from 'react';\r\n\r\nimport './blurb.styles.css';\r\n\r\nexport const Blurb = () => {\r\n    return(\r\n        <div className=\"blurb\">\r\n            <h1>Hi! I'm Kevin, a full stack web developer passionate about building secure and scalable applications.</h1>\r\n            <p>I primarily work on MERN stack projects, but I am also familiar with PHP and Ruby. I love learning new coding languages and technologies and am always eager to further develop my craft.  When I'm not writing code I enjoy tabletop gaming, discovering new music and spending time with my dog.</p>\r\n        </div>\r\n    )\r\n}","import React from 'react';\r\n\r\nimport { Photo } from '../photo/photo.component';\r\nimport { Blurb } from '../blurb/blurb.component';\r\n\r\nimport './about-section.styles.css'\r\n\r\nexport const About = () => {\r\n    return (\r\n        <div className=\"about\">\r\n            <Photo />\r\n            <Blurb />\r\n        </div>\r\n    )\r\n}","import React from 'react';\r\n\r\nimport './skills.style.css';\r\n\r\nexport const Skills = ({selectedSkills, handleSelectSkill, handleSelectAll, handleClearProjects, skills}) => {\r\n        return (\r\n            <div className='skill-container'>\r\n                {skills.map(skill => {\r\n                    return (\r\n                    <div onClick={() => handleSelectSkill(skill)} className={selectedSkills.includes(skill) ? 'skill-active' : 'skill-not-active'}>\r\n                        <p>{skill}</p>\r\n                    </div>\r\n                    )\r\n                })}\r\n                {selectedSkills.length === skills.length ?\r\n                <div onClick={handleClearProjects} className=\"skill-not-active\"><p>Clear Projects</p></div> :\r\n                <div onClick={handleSelectAll} className=\"skill-active\"><p>Select All</p></div> \r\n\r\n                }\r\n            </div>\r\n        )\r\n}","import React from 'react';\r\n\r\nimport './project.styles.css';\r\n\r\nexport const Project = ({project}) => {\r\n    console.log(project)\r\n    return (\r\n        <div className=\"project-card\">\r\n            <img src=\"\" alt=\"project preview\" />\r\n            <h1>{project.title}</h1>\r\n            <p>{project.description}</p>\r\n            <div className=\"project-skills\">\r\n                {project.tags.map(tag => {\r\n                    return <p className=\"skill-tag\">{tag}</p>\r\n                }) \r\n                }\r\n            </div>\r\n            <div className=\"project-links\">\r\n                <a className=\"link\" href={project.githubUrl} target=\"_blank\" rel=\"noopener noreferrer\"><p>Github</p></a>\r\n                {project.liveUrl && \r\n                <a className=\"link\" href={project.liveUrl} target=\"_blank\" rel=\"noopener noreferrer\"><p>Live</p></a>\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React, { Component } from 'react';\r\n\r\nimport './projects-section.styles.css';\r\nimport projectData from './projectData';\r\n\r\nimport { Skills } from '../skills/skills.component';\r\nimport { Project } from '../project/project.component'; \r\n\r\nexport class ProjectsSection extends Component{\r\n     constructor(){\r\n          super();\r\n\r\n          this.state = {\r\n               skills: ['Javascript', 'PHP', 'Ruby', \"Node\", 'React', 'SQL', 'MongoDB'],\r\n               selectedSkills: [],\r\n               selectAll: true,\r\n               projects: []\r\n          }\r\n     }\r\n\r\n     componentDidMount() {\r\n          console.log(projectData)\r\n          this.setState({projects: projectData})\r\n          // fetch('http://localhost:5000/getProjects', {\r\n          //      headers: {\r\n          //           \"Content-Type\": 'application/json'\r\n          //      }\r\n          // })\r\n          // .then(response => response.json())\r\n          // .then(projects => this.setState({projects: projectData}))\r\n          // .catch(err => console.log(err)) \r\n          \r\n          this.setState({selectedSkills: this.state.skills})\r\n     }\r\n\r\n     handleSelectAll = () => {\r\n          this.setState({selectAll: true, selectedSkills: this.state.skills}); \r\n     }\r\n\r\n     handleClearProjects = () => {\r\n          this.setState({selectAll: false, selectedSkills: []})\r\n     }\r\n\r\n     handleSelectSkill = skill => {\r\n          if(this.state.selectedSkills.includes(skill)) {\r\n               const updatedSkills = this.state.selectedSkills.filter(i => i !== skill);\r\n               this.setState({selectedSkills: updatedSkills})\r\n          } else {\r\n               const updatedSkills = [...this.state.selectedSkills, skill];\r\n               this.setState({selectedSkills: updatedSkills});\r\n          }\r\n     }\r\n\r\n     render() {\r\n          return (\r\n               <>\r\n                    <h1 className=\"header\">My Projects</h1>\r\n                    <Skills \r\n                         handleSelectSkill={this.handleSelectSkill}\r\n                         handleSelectAll={this.handleSelectAll} \r\n                         handleClearProjects={this.handleClearProjects}\r\n                         skills={this.state.skills}\r\n                         selectedSkills={this.state.selectedSkills}\r\n                    />\r\n                    {this.state.selectedSkills.length ?\r\n                    <div className=\"project-container\">\r\n                         {this.state.projects.map(project => {\r\n                              let display;\r\n                              this.state.selectedSkills.forEach(skill => {\r\n                                   if(project.tags.includes(skill)){\r\n                                        return display = true;\r\n                                   }\r\n                              })   \r\n                              if(display){\r\n                                   return <Project project={project} />\r\n                              }\r\n                         })}\r\n                    </div> :\r\n                    <h1 className=\"header\">Please select a skill to see associated projects.</h1>\r\n     }\r\n               </>\r\n          )\r\n     }\r\n}","import React from 'react';\r\nimport { Component } from 'react';\r\n\r\nimport './contact-form.styles.css';\r\n\r\nexport class ContactForm extends Component{\r\n    constructor() {\r\n        super();\r\n\r\n        this.state = {\r\n            message: '',\r\n            email: '',\r\n            name: ''\r\n        }\r\n    }\r\n\r\n    handleChange = e => {\r\n        const {name, value} = e.target;\r\n        this.setState({[name]: value});\r\n    }\r\n\r\n    handleSubmit = e => {\r\n        e.preventDefault();\r\n\r\n        const messageData = {\r\n            message: this.state.message,\r\n            email: this.state.email,\r\n            subject: this.state.subject\r\n        }\r\n\r\n       fetch('http://localhost:8000/email', {\r\n           method: \"POST\",\r\n           headers: {\r\n               \"Content-Type\": \"application/json\"\r\n           },\r\n           body: JSON.stringify(messageData)\r\n       })\r\n       .then(res => res.json())\r\n       .then(res => console.log(res))\r\n       .catch(err => console.log(err));  \r\n    }\r\n\r\n    render() {\r\n        return (\r\n           <div className=\"form-container\">\r\n               <form onSubmit={this.handleSubmit}>\r\n                    <div className=\"form-section\">\r\n                        <label>Subject: </label>\r\n                        <input className=\"email-input\" name=\"subject\" type=\"text\" value={this.state.subject} onChange={this.handleChange} />\r\n                    </div>\r\n                    <div className=\"form-section\">\r\n                        <label>Contact Email: </label>\r\n                        <input className=\"email-input\" name=\"email\" type=\"email\" value={this.state.email} onChange={this.handleChange} />\r\n                    </div>\r\n                    <div className=\"form-section\">\r\n                        <label>Message:</label>\r\n                        <textarea className=\"message-input\" name=\"message\" value={this.state.message} onChange={this.handleChange} id=\"\" cols=\"30\" rows=\"10\"></textarea>\r\n                    </div>\r\n                    <button type=\"submit\" className=\"submit-btn\">Submit</button>\r\n               </form>\r\n           </div>\r\n        )\r\n    }\r\n} ","import React from 'react';\r\n\r\nimport './socials.styles.css';\r\n\r\nexport const Socials = () => {\r\n    return (\r\n        <div>\r\n        <a href=\"https://github.com/kguertin\" target=\"_blank\" rel=\"noopener noreferrer\">Github</a>\r\n        <a href=\"https://twitter.com/kg_webdev\" target=\"_blank\" rel=\"noopener noreferrer\">Twitter</a>\r\n        <a href=\"https://www.linkedin.com/in/kevin-guertin-7a455537/\" target=\"_blank\" rel=\"noopener noreferrer\">Linkedin</a>\r\n        </div>\r\n    )\r\n} ","import React from 'react';\r\n\r\nimport { ContactForm } from '../contact-form/contact-form.component';  \r\nimport { Socials } from '../socials/socials.component';\r\n\r\nimport './contact-section.styles.css';\r\n\r\nexport const Contact = () => {\r\n    return (\r\n        <div className=\"contact-container\">\r\n            <h1 className=\"header\">Want to Talk? Lets Get in Touch!</h1>\r\n            <ContactForm />\r\n            <Socials />\r\n        </div>\r\n    )\r\n}","import React, { Component } from 'react';\n\nimport { Nav } from './components/nav/nav.component';\nimport { About } from './components/about-section/about-section.component';\nimport { ProjectsSection } from './components/projects-section/projects-section.component';\nimport { Contact } from './components/contact-section/contact-section.component';\n\nimport './App.css';\n\nclass App extends Component{\n  constructor(){\n    super();\n\n    this.state = {\n      currentSection: 'about'\n    }\n\n  }\n\n  changeSection = (section) => {\n    this.setState({\n      currentSection: section\n    })\n  }\n\n  render(){\n    return (\n      <div>\n        <Nav currentSection={this.state.currentSection} changeSection={this.changeSection} />\n        { this.state.currentSection === 'about' && <About /> }\n        { this.state.currentSection === 'projects' && <ProjectsSection /> }\n        { this.state.currentSection === 'contact' && <Contact /> }\n      </div>\n    )\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}